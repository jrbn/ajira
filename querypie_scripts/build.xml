<?xml version="1.0" encoding="UTF-8" standalone="no"?>

<project basedir="." default="build" name="querypie">
    <property environment="env" />
    <property name="debuglevel"    value="source,lines,vars" />
    <property name="target" value="1.6" />
    <property name="source" value="1.6" />
    <property name="bin.dir" value="bin" />
    <property name="src.dir" value="src" />
    <property name="lib.dir" value="lib" />
    <property name="jar.dir" value="jar" />
    <property name="jar.file" value="${jar.dir}/querypie.jar" />
    <property name="depsjar.file" value="${jar.dir}/querypie-deps.jar" />
    <property name="manifest.file" value="${jar.dir}/MANIFEST.MF" />
    <property name="main.class" value="nl.vu.cs.querypie.sort.BenchmarkSorting" />
 
    <!-- Init target rule -->
    <target name="init">
        <mkdir dir="${bin.dir}"/>
        <copy includeemptydirs="false" todir="${bin.dir}">
            <fileset dir="${src.dir}">
                <exclude name="**/*.launch" />
                <exclude name="**/*.java" />
            </fileset>
        </copy>
    </target>

    <!-- Clean target rules -->
    <target name="clean">
        <delete dir="${bin.dir}" />
        <delete dir="${jar.dir}" />
    </target>
    <target name="cleanall" depends="clean" />
 
    <!-- External jars path - project's dependencies -->
    <path id="external.jars">
        <fileset dir="${lib.dir}" includes="**/*.jar" />
    </path>

    <!-- Project's classpath -->
    <path id="project.classpath">
        <pathelement location="${src.dir}" />
        <pathelement location="${bin.dir}" />
        <path refid="external.jars"  />
    </path>

    <!-- Build target rule: compiles/builds the project -->
    <target name="build" depends="init">
        <echo message="${ant.project.name}: ${ant.file}"/>
        <javac debug="true" debuglevel="${debuglevel}" destdir="${bin.dir}" source="${source}" target="${target}">
            <src path="${src.dir}"/>
            <classpath refid="project.classpath"/>
        </javac>
    </target>

    <!-- Build-jar target rule: creates a fat-jar/bundle by using 
    jar-unjar-jar mechanism -->
    <target name="build-jar" depends="build">
        <delete dir="${jar.dir}"/>
        <mkdir dir="${jar.dir}"/>

        <!-- Create manifest file with proejct specs inside -->
        <manifest file="${manifest.file}" >
            <attribute name="built-by" value="${user.name}" />
            <attribute name="Main-Class" value="${main.class}" />
            <attribute name="Class-Path" value="." />
        </manifest>

        <!-- Jar all the dependencies -->
        <jar jarfile="${depsjar.file}">
            <zipgroupfileset dir="${lib.dir}" includes="**/*.jar" />
        </jar>
	
	    <!-- Wait for packaging -->
	    <sleep seconds="1" />

        <!-- Unjar dependencies + clean signatures + jar the whole projects 
        as a fat-jar/bundle -->
	    <jar jarfile="${jar.file}" basedir="${bin.dir}" manifest="${manifest.file}">
      	    <zipfileset src="${depsjar.file}" excludes="META-INF/**/*" />
    	</jar>

        <!-- Delete de dependecies jar -->
    	<delete file="${depsjar.file}"/>
    </target>

    <!-- Run-target rules -->
    <!-- ################ -->

    <!-- #1: run program on local-computer with ibis started by default -->
    <!-- uses logging to files -->
    <target name="LocalSortTriples">
        <java classname="${main.class}" failonerror="true" fork="yes">
            <jvmarg line="-Xmx256m -Dibis.pool.name=sorting -Dibis.server.address=localhost -Dibis.pool.size=1 -Dlogback.configurationFile=conf/logback.xml"/>
            <arg line="/home/mocke/MasterProj/lubm_1 /home/mocke/MasterProj/out 1 --storage-engine files --without-ibis"/>
            <classpath refid="project.classpath"/>
        </java>
    </target>
</project>

